#cloud-config
# vim: syntax=yaml

# store logs inside vm
output: {all: '| tee -a /var/log/cloud-init.log'}

timezone: "America/Chicago"

package_update: true          # default: true
package_upgrade: false        # default: false
# https://github.com/number5/cloud-init/blob/main/doc/examples/cloud-config-apt.txt#L21
apt_get_command: ["apt-get", "--option=Dpkg::Options::=--force-confold", "--option=Dpkg::options::=--force-unsafe-io", "--assume-yes", "--quiet", "--no-install-recommends"]
packages:
  - ansible
  - bats
  - build-essential
  - ca-certificates
  - curl
  - docker.io
  - net-tools
  - python3
  - python3-pip
  - tree
  - vim

groups:
  - docker

users:
  - name: ubuntu
    sudo: ALL=(ALL) NOPASSWD:ALL
    gecos: Default User
    home: /home/ubuntu
    groups: users,admin,netdev,sudo,wheel,docker
    lock_passwd: true
    shell: /bin/bash
    no_ssh_fingerprints: true
    ssh_import_id:
      - gh:pythoninthegrass
  - name: ansible
    sudo: ALL=(ALL) NOPASSWD:ALL
    gecos: Ansible User
    groups: users,admin,netdev,sudo,wheel
    shell: /bin/bash

ssh_authorized_keys:
  - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDXjylZLJVRasvFbl3OBM0WFaBspXzhU35GpX3kbCC0PuD8aH9GGJWUpcA4pgimzUXDd/PUIDe9hQSAnikLEk6skm5lhHRLUqqW05srLevYT7vaLi2fplLrn7M1FDUJ8Gz2NatENmZGQho+g1G3CV9UOHhukVP1ULXT/cwWeI2CU5hGQypOZLN8Orymu0rJNwLcadnx/azuHXnfNvZVhKD4ghjiIJfWz++v+rXRTizx5FBPg2MOu1I/7xW5fBjVlBJl3AMdjiCuKWYkEcE5OhYRtexg+pv1lyvYgg0mYSXGJB0ucXjiVPwtVGjo9/LtG6mfYbdhOxTbF5Id4j2tZsA760MC7BYUKgBvc7SxTsNYpoWIdD+T1bx4Qa42Dv3+q0QdBjaGVGEHntAFBSLuKsyBtbylX/d1SzrUZWFJ9+vKzzqdkwKQKSSj+SPQqVL1ablumrU13q5NsuMc33XEsfVp9BYXOJmz9IwMNx6piMhQlBA6VqrmcCZr4i4LlxNhvA0= vmadmin

write_files:
  - path: /home/ubuntu/.bashrc
    owner: ubuntu:ubuntu
    permissions: '0644'
    defer: false
    append: false
    content: |
      # Verify that shell is interactive
      if [[ $- != *i* ]]; then return; fi

      alias update='sudo apt update && sudo apt upgrade -y && sudo apt dist-upgrade -y && sudo apt autoremove -y && sudo apt auto-clean'
      alias python='python3'
      alias ll='ls -FGlAhp'
      alias mkdir='mkdir -pv'
      alias ..='cd ../'
      alias ...='cd ../../'
      cd() { builtin cd "$@"; ll; }

      HISTCONTROL=ignoreboth
      shopt -s histappend
      HISTSIZE=1000
      HISTFILESIZE=2000

      shopt -s checkwinsize

      if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
          debian_chroot=$(cat /etc/debian_chroot)
      fi

      case "$TERM" in
        xterm-color|*-256color) color_prompt=yes;;
      esac

      if [ "$color_prompt" = yes ]; then
          PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \nλ '
      else
          PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w \nλ '
      fi
      unset color_prompt force_color_prompt

      case "$TERM" in
      xterm*|rxvt*)
          PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
          ;;
      *)
          ;;
      esac

  - path: /home/ubuntu/.bash_profile
    owner: ubuntu:ubuntu
    permissions: '0644'
    defer: false
    append: false
    content: |
      [[ -s ~/.bashrc ]] && source ~/.bashrc

  - path: /home/ubuntu/git/.gitignore
    owner: ubuntu:ubuntu
    permissions: '0644'
    defer: false
    append: false
    content: |
      .env
      .gitattributes
      .venv
      *.bak
      **/scratch*
      creds/
      service_account.json
      settings.ini

  - path: /home/ubuntu/.gitconfig
    owner: ubuntu:ubuntu
    permissions: '0644'
    defer: false
    append: false
    content: |
      [core]
        excludesfile = /home/ubuntu/git/.gitignore
      [user]
        email = 4097471+pythoninthegrass@users.noreply.github.com
        name = pythoninthegrass

  - path: /etc/ansible/hosts
    owner: ansible:ansible
    permissions: '0644'
    defer: false
    append: false
    content: |
      [all]
      localhost ansible_connection=local

      [all:vars]
      ansible_user=ansible
      ansible_become=yes
      ansible_become_method=sudo
      ansible_python_interpreter=/usr/bin/python3

  - path: /etc/netplan/50-cloud-init.yaml
    owner: root:root
    permissions: '0644'
    defer: false
    append: false
    content: |
      network:
        version: 2
        ethernets:
          enp0s2:
            dhcp4: true
            match:
              macaddress: 0a:74:61:3b:44:00
            set-name: enp0s2
            nameservers:
              addresses: [1.1.1.1, 1.0.0.1]

# # * smoke test
#   - path: /etc/systemd/system/container.service
#     owner: root:root
#     permissions: '0755'
#     content: |
#       [Unit]
#       Description=Run container
#       Requires=docker.service
#       After=docker.service

#       [Service]
#       Restart=always
#       ExecStartPre=-/usr/bin/docker rm container
#       ExecStart=/usr/bin/docker run --rm --name container hello-world
#       ExecStop=/usr/bin/docker stop -t 2 container

# TODO: QA
ansible:
  install_method: pip
  package_name: ansible
  run_user: ubuntu
  pull:
    url: "https://github.com/pythoninthegrass/multipass_poc.git"
    playbook_name: git.yml

# ansible:
#   install_method: pip
#   pull:
#     url: "https://github.com/pythoninthegrass/multipass_poc.git"
#     playbook_name: hardening.yml

runcmd:
  - mkdir -p /home/ubuntu/.ansible
  - chown -R ansible:ansible /home/ubuntu/.ansible
  - chmod -R 0644 /home/ubuntu/.ansible
  # - mkdir -p /home/ubuntu/git
  # - chown -R ubuntu:ubuntu /home/ubuntu/git
  # - chmod -R 0644 /home/ubuntu/git
  - usermod -aG docker ubuntu
  # * smoke test
  # - systemctl start container
  # - systemctl enable container
  # - sudo python3 -m pip install ansible
  - ansible-galaxy collection install community.general
  # * smoke test
  # - ansible all -m ping -i /etc/ansible/hosts

final_message: "The system is finally up, after $UPTIME seconds"
